






    <div id="first" class="box">
      <h2>Send a message to be added to the db</h2>
      <p> A message woker needs to be started to hanlde bd requests first, one can be started by
          going to /StoreUnit/Read (don't mind that you dont get a responce...)
          TODO: Change to start workers when adding a store unit
          </p>
          </div>
      <div>
      <form><input autocomplete="off" value="Type here..."></input> 
      <button id="SendMessage"> Send RabbitMQ message</button></form>
    </div>



@section Scripts {
<script src="//cdn.jsdelivr.net/sockjs/1.0.3/sockjs.min.js"></script>
<script src="~/lib/stomp.js"></script>
<script>

"use strict";


        var has_had_focus = false;
        var pipe = function(el_name, send) {
            var div  = $(el_name + ' div');
            var inp  = $(el_name + ' input');
            var form = $(el_name + ' form');

            var print = function(m, p) {
                p = (p === undefined) ? '' : JSON.stringify(p);
            };

            if (send) {
                form.submit(function() {
                    send(inp.val());
                    inp.val('');
                    return false;
                });
            }
            return print;
        };

      // Stomp.js set up a connection
      if (location.search == '?ws') {
          var client = Stomp.client('ws://' + window.location.hostname + ':15674/ws');
      } else { //legacy support
          var ws = new SockJS('http://' + window.location.hostname + ':15674/stomp');
          var client = Stomp.over(ws);
      }



      //Called when wanting to send data to server
     var send_data = pipe('#first', function(data) {
         //Queue name, header arguments (can be empty), content
          client.send('testqueue', {"content-type":"text/plain"}, data);
      });


      var on_connect = function(x) {
          //This is where you know the connection is up, and you can subscribe to posts if you want to

      };

      
      var on_error =  function() {
        console.log('error');
      };

      //Connect localhost with username guest, password guest and callback function on_connect
      client.connect('guest', 'guest', on_connect, on_error, '/');


      //Clear input on focus loss
      $('#first input').focus(function() {
          if (!has_had_focus) {
              has_had_focus = true;
              $(this).val("");
          }
      });
      //Call 
      $( '#SendMessage' ).click(function() {
            send_data($('#first input').val());
      });
    


</script>
}